<!DOCTYPE HTML>
<html>
<head>
    <title>Portal</title>
    <link rel="stylesheet" media="screen" href="/vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" media="screen" href="/vendor/jquery/css/smoothness/jquery-ui-1.10.3.custom.min.css">
    <link rel="stylesheet" href="/vendor/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/vendor/vendor.css">
    <link rel="stylesheet" href="/red/style.min.css">
    <link href="/fonts/AvenirNextLTPro.css" rel="stylesheet" type="text/css">

    <script src="/jquery.min.js"></script>
    <script src="/async.min.js"></script>
    <script src="/vendor/vendor.js"></script>
    <script src="/vendor/ace/ace.js"></script>
    <script src="/vendor/ace/ext-language_tools.js"></script>
    <script src="/red/red.js"></script>
    <script src="/red/main.js"></script>
    <script src="/red/events.js"></script>
    <script src="/red/i18n.js"></script>
    <script>
        RED.settings = {
            init: function(){}
        }
    </script>
    <script src="/red/user.js"></script>
    <script src="/red/comms.js"></script>
    <script src="/red/ui/state.js"></script>
    <script src="/red/validators.js"></script>
    <script src="/red/ui/keyboard.js"></script>
    <script src="/red/ui/view.js"></script>
    <script src="/red/ui/editor.js"></script>
    <script src="/red/ui/library.js"></script>
    <script src="/red/ui/notifications.js"></script>
    <style>
        html {
            height: calc(100% - 40px);
        }
        body {
            background-color: white;
            padding-top: 40px;
            font-family: 'Avenir Next LT Pro Regular', sans-serif !important;
            font-weight: 25px;
            color: rgb(150,150,150);
        }

        #notifications {
            position: fixed;
        }

        .navbar-fixed-top {
            position: fixed !important;
        }

        .setting-board {
            position: static;
        }

        .setting-edit-container {
            padding: 0px;
            margin: 23px auto;
            width: 540px;
        }

        #settings-container {
            overflow: auto;
            background-color: white;
            height: 100%;
        }

        .ui-button:active {
            background-color: #8f8f8f;
        }

        #wifilist-ssid{
            width: 70%;
        }

        #dialog{
            display: block;
            width: auto;
            min-height: 26px;
            max-height: none;
            height: auto;
        }

        #button_submit[disabled]{
            cursor: not-allowed;
        }

        #button_submit[disabled]:hover{
            background-color: #f3f3f3;
        }
    </style>

    <script>
        var currentIP;
        var redirectTimer;
        var hostname;
        var tout = 10000;
        var okLabel = "Ok";
        var scanLabel = "Re scan";
        var loader = "<img src='/red/images/spin.svg' />"

        function getUserIP(onNewIP) {
            //compatibility for firefox and chrome
            var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;
            var pc = new myPeerConnection({
                iceServers: []
            }),
            noop = function() {},
            localIPs = {},
            ipRegex = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,
            key;

            function iterateIP(ip) {
                if (!localIPs[ip]) onNewIP(ip);
                localIPs[ip] = true;
            }

            //create a bogus data channel
            pc.createDataChannel("");

            // create offer and set local description
            pc.createOffer().then(function(sdp) {
                sdp.sdp.split('\n').forEach(function(line) {
                    if (line.indexOf('candidate') < 0) return;
                    line.match(ipRegex).forEach(iterateIP);
                });

                pc.setLocalDescription(sdp, noop, noop);
            }).catch(function(reason) {
                // An error occurred, so handle the failure to connect
            });

            //listen for candidate events
            pc.onicecandidate = function(ice) {
                if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;
                ice.candidate.candidate.match(ipRegex).forEach(iterateIP);
            };
        }

        function tryToRedirectOnTTB(){
            if(currentIP.indexOf("192.168.61.") == -1){
                var url = "http://"+ hostname;
                redirectTimer = setTimeout(function(){
                    $.ajax({
                        url: url+"/keepalive",
                        type: 'GET',
                        timeout: tout
                    }).done(function(data, textStatus, jqXHR){
                        window.location.replace(url);
                    }).fail(function(jqXHR, textStatus, errorThrown){
                        tryToRedirectOnTTB();
                    });
                }, tout);
            } else {
                getUserIP(function(ip){
                    currentIP = ip;
                    redirectTimer = setTimeout(tryToRedirectOnTTB, tout);
                })
            }
        }

        function onPwdChange(){
            if($("#wifilist-password").val() == ""){
                disablePost(true);
            } else {
                enablePost();
            }
        }

        function enablePost(){
            $("#button_submit").prop('disabled', false);
            $("#button_submit").children('.ui-button-text')[0].innerHTML = okLabel;
            $('#wifilist-ssid').prop('disabled', false);
            $('#wifilist-password').prop('disabled', false);
        }

        function disablePost(doNotSetLoader){
            $("#button_submit").prop('disabled', true);
            if(!doNotSetLoader){
                $('#wifilist-ssid').prop('disabled', true);
                $('#wifilist-password').prop('disabled', true);
                $("#button_submit").children('.ui-button-text')[0].innerHTML = loader;
            }
        }

        function enableScan(){
            $("#button_scan").prop('disabled', false);
            $("#button_scan").children('.ui-button-text')[0].innerHTML = scanLabel;
            $('#wifilist-ssid').prop('disabled', false);
            $('#wifilist-password').prop('disabled', false);
        }

        function disableScan(doNotSetLoader){
            $("#button_scan").prop('disabled', true);
            if(!doNotSetLoader){
                $('#wifilist-ssid').prop('disabled', true);
                $('#wifilist-password').prop('disabled', true);
                $("#button_scan").children('.ui-button-text')[0].innerHTML = loader;
            }
        }

        function add_optgr(sel, lab, opts) {
            var i;
            var opt;
            var gr = document.createElement('OPTGROUP');
            var len = opts.length;
            
            gr.label = lab;
            for (i = 0; i < len; ++i) {
                opt = document.createElement('OPTION');
                opt.value = opts[i].essid;
                opt.textContent = opts[i].essid;
                gr.appendChild(opt);
            }
            sel.appendChild(gr);
            return gr;
        }

        function build_select(sel, opt) {
            sel.innerHTML = '';
            var none = document.createElement('OPTION');
            none.value = 'none';
            none.selected = 'true'
            sel.appendChild(none);
            var prop;
            for (prop in opt) {
                if (opt.hasOwnProperty(prop)) {
                    add_optgr(sel, prop, opt[prop]);
                }
            }
        }

        function scanning_select(){
            var sel = document.getElementById('wifilist-ssid')
            sel.innerHTML = '';
            var scanning = document.createElement('OPTION');
            scanning.value = 'none';
            scanning.textContent = 'scanning'
            scanning.selected = 'true'
            sel.appendChild(scanning);
        }

        function fill_wifi_select(cb){
            scanning_select()
            $.ajax({
                url: "/wifi/scan",
                type: 'GET',
                timeout: tout
            }).done(function(data, textStatus, jqXHR){
                try{
                    data = JSON.parse(data)
                } catch(e){}
                if(data && data.hasOwnProperty("wifilist")){
                    build_select(document.getElementById('wifilist-ssid'), data.wifilist);
                };
                cb();
            }).fail(function(){
                cb();
            });
        }

        function loaded(){
            $('#wifi-form').submit(function(event){
                disablePost();
                $("#notif").hide(500);
                $("#notif").html("");

                event.preventDefault();
                var formData = {
                    ssid: $('#wifilist-ssid').val(),
                    password: $('#wifilist-password').val(),
                    secured: $('#wifilist-secured').val()
                }

                $.ajax({
                    url: '/portal',
                    data: formData,
                    method: "POST"
                }).done(function(data, textStatus, jqXHR){
                    RED.notify(data.message, "success", 5000);
                    hostname = data.hostname;
                    if(hostname){
                        clearTimeout(redirectTimer);
                        tryToRedirectOnTTB();
                    }
                }).fail(function(jqXHR, textStatus, errorThrown){
                    console.log(jqXHR);
                    RED.notify(jqXHR.responseJSON.message, "error", 5000);
                    enablePost();
                });
            });

            $('#wifilist-ssid').on("change", function(evt){
                var group = $(this.selectedOptions).closest('optgroup').prop('label');
                if(group == "open"){
                    $("#wifilist-secured").val("false");
                    $("#password").hide(500);
                    enablePost();
                } else {
                    $("#wifilist-secured").val("true");
                    $("#password").show(500);
                    onPwdChange();
                }
            });

            $("#wifilist-password").on("keyup", function() {
                onPwdChange();
            });
            $("#wifilist-password").on("change", function() {
                onPwdChange();
            });

            $("#button_scan").on('click', function(){
                disableScan();
                fill_wifi_select(function(){
                    enableScan();
                });
            })
        }

        $(document).ready(function(){
            getUserIP(function(ip){
                currentIP = ip;
            })
            disablePost(true);
            function waitNLS() {
                if (RED._("common.label.name") != "") {
                    $("#wifi_title").html(RED._("settings.interfaces.wifi", { defaultValue: "Wifi" }));
                    $("#wifi_ssid").html(RED._("settings.interfaces.wifi_ssid", { defaultValue: "WiFi name" }));
                    $("#wifi_password").html(RED._("settings.interfaces.wifi_password", { defaultValue: "WiFi password" }));

                    $("#wifilist-container").load("wifilist");

                    disableScan();
                    fill_wifi_select(function(){
                        enableScan();
                    });
                    loaded();
                }
                else {
                    setTimeout(waitNLS, 100);
                }
            }
            waitNLS();
        });
    </script>
</head>
<body>    
    <div id="notifications"></div>
    <div id="navbar-container">
        <div id="header">
            <span class="logo">
                <a target="_blank" href="http://thethingbox.io"><img src="/logo.png" style="height: 32px;"></a>
            </span>
        </div>
    </div>

    <div id="settings-container">
        <div id="wifi-container" class="setting-edit-container">
            <div aria-labelledby="ui-id-4" aria-describedby="dialog" role="dialog" tabindex="-1" class="setting-board ui-dialog ui-widget ui-widget-content">
                <div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
                    <span class="ui-dialog-title" id="ui-id-4">
                        <span id="wifi_title"></span>
                    </span>
                </div>
                <div id="dialog" class="hide ui-dialog-content ui-widget-content">
                    <form id="wifi-form" class="form-horizontal">
                        <div id="wifilist">
                            <div class="form-row">
                                <label for="wifilist-ssid"><i class="icon-tag"></i>
                                    <span id="wifi_ssid"></span>
                                </label>
                                <select id="wifilist-ssid" name="ssid" class="form-control">
                                </select>
                                <input id="wifilist-secured" type="hidden" name="secured">
                            </div>

                            <div class="form-row" id="password">
                                <label for="wifilist-password"><i class="icon-lock"></i>
                                    <span id="wifi_password"></span>
                                </label>
                                <input id="wifilist-password" type="password" name="password">
                            </div>
                        </div>
                    </form>
                </div>

                <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
                    <div class="ui-dialog-buttonset">
                        <button id="button_scan" role="button" class="ui-button ui-state-default">
                            <span class="ui-button-text">Re scan</span>
                        </button>
                        <button id="button_submit" role="button" class="ui-button ui-state-default" type="submit" form="wifi-form" disabled>
                            <span class="ui-button-text">Ok</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</body>
</html>